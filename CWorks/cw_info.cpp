#include <iostream>

void ShowAuthor()
{
	std::cout << "Работу выполнил: Семенков Даниил Ильич|Группа 425|Вариант 24|" << std::endl;
}

void ShowMainMenu()
{
	system("pause");
	system("cls");
	std::cout
		<< "Выберите контрольную работу или завершите программу, нажав соответствующую клавишу." << std::endl
		<< "1 - Контрольная работа №1." << std::endl
		<< "2 - Контрольная работа №2." << std::endl
		<< "3 - Контрольная работа №3." << std::endl
		<< "4 - Контрольная работа №4." << std::endl
		<< "ESC - Завершение работы программы." << std::endl;
}

void ShowMainMenuCW1()
{
	std::cout 
		<< "1 - Загрузить список клиентов из файла," << std::endl
		<< "2 - Ввести вручную," << std::endl
		<< "3 - Запуск модульных тестов," << std::endl
		<< "ESC - прервать выполнение данной КР." << std::endl;
}

void ShowMainMenuCW2()
{
	std::cout 
		<< "1 - Загрузить список сотрудников из файла," << std::endl
		<< "2 - Ввести вручную," << std::endl
		<< "3 - Запуск модульных тестов," << std::endl
		<< "ESC - прервать выполнение данной КР." << std::endl;

}

void ShowMainMenuCW3()
{
	std::cout
		<< "1 - Загрузить матрицу из файла," << std::endl
		<< "2 - Ввести матрицу вручную," << std::endl
		<< "3 - Запуск модульных тестов," << std::endl
		<< "4 - Ввод случайных значений," << std::endl
		<< "ESC - прервать выполнение данной КР." << std::endl;
}

void ShowMainMenuCW4()
{
	std::cout
		<< "1 - Загрузить текст из файла," << std::endl
		<< "2 - Ввести текст вручную," << std::endl
		<< "3 - Запуск модульных тестов," << std::endl
		<< "ESC - прервать выполнение данной КР." << std::endl;
}

void ShowMenuCW1()
{
	
	std::cout << std::endl
		<< "Выберите опцию меню:" << std::endl
		<< "1 - Показать список клиентов в алфавитном порядке." << std::endl
		<< "2 - Показать список клиентов, номер карты которых находится в заданном интервале." << std::endl
		<< "3 - Добавить клиентов/Изменить список." << std::endl
		<< "4 - Сохранение в файл." << std::endl
		<< "ESC - Выход в главное меню." << std::endl
		<< std::endl;
}

void ShowMenuCW2()
{
	std::cout << std::endl
		<< "Выберите опцию меню:" << std::endl
		<< "1 - Показать список сотрудников университета." << std::endl
		<< "2 - Добавить сотрудника/Изменить список." << std::endl
		<< "3 - Сохранение в файл." << std::endl
		<< "ESC - Выход в главное меню." << std::endl
		<< std::endl;
}

void ShowMenuCW3()
{
	std::cout << std::endl
		<< "Выберите опцию меню:" << std::endl
		<< "1 - Вывод исходной матрицы и результатов сортировок." << std::endl
		<< "2 - Сохранение в файл." << std::endl
		<< "ESC - Выход в главное меню." << std::endl
		<< std::endl;
}

void ShowMenuCW4()
{
	std::cout << std::endl
		<< "1 - Ввеcти минимальную длину повторяющихся подстрок" << std::endl
		<< "2 - Показать восстановленный(исходный) текст," << std::endl
		<< "3 - Показать изменённый текст," << std::endl
		<< "4 - Сохранить восстановленный текст," << std::endl
		<< "5 - Сохранить измененный текст," << std::endl
		<< "ESC - Выход в главное меню." << std::endl
		<< std::endl;
}

void ShowSubMenuCW1()
{
	std::cout << std::endl
		<< "Выберите опцию меню:" << std::endl
		<< "1 - Добавить нового клиента." << std::endl
		<< "2 - Изменить существующего." << std::endl
		<< "ESC - Вернуться назад." << std::endl
		<< std::endl;
}

void ShowSubMenuCW2()
{
	std::cout << std::endl
		<< "Выберите опцию меню:" << std::endl
		<< "1 - Добавить нового сотрудника." << std::endl
		<< "2 - Изменить существующего." << std::endl
		<< "ESC - Вернуться назад." << std::endl
		<< std::endl;
}

void ShowModMenuCW1()
{
	std::cout << std::endl
		<< "Выберите опцию меню:" << std::endl
		<< "1 - Изменить имя." << std::endl
		<< "2 - Изменить адрес." << std::endl
		<< "3 - Изменить контактную информацию." << std::endl
		<< "4 - Стереть данные клиента." << std::endl
		<< "ESC - Вернуться назад." << std::endl
		<< std::endl;
}

void ShowModMenuCW2()
{
	std::cout << std::endl
		<< "Выберите опцию меню:" << std::endl
		<< "1 - Изменить фамилию." << std::endl
		<< "2 - Изменить пол." << std::endl
		<< "3 - Изменить адрес." << std::endl
		<< "4 - Удалить сотрудника." << std::endl
		<< "5 - Изменить должность." << std::endl
		<< "6 - Изменить кафедру." << std::endl
		<< "7 - Изменить обязанности." << std::endl
		<< "8 - Изменить зарплату." << std::endl
		<< "ESC - Вернуться назад." << std::endl
		<< std::endl;
}


void InfoCW1()
{
	system("cls");
	std::cout << std::endl
		<< "Контрольная работа №1. Инкапсуляция. Классы в С++ и средства их построения." << std::endl
		<< "–-------------------------------------------------------------" << std::endl
		<< "Содержание задания:" << std::endl
		<< "Клиент: фамилия, имя, отчество, адрес, телефон, номер карты, номер банковского счета.." << std::endl
		<< "Создать массив объектов. Реализовать возможность получения:" << std::endl
		<< "– списка клиентов в алфавитном порядке," << std::endl
		<< "– списка клиентов, номер карты которых находится в заданном интервале." << std::endl
		<< "–-------------------------------------------------------------" << std::endl;
}

void InfoCW2()
{
	system("cls");
	std::cout << std::endl
		<< "Контрольная работа №2. Наследование." << std::endl
		<< "–-------------------------------------------------------------" << std::endl
		<< "Содержание задания:" << std::endl
		<< "Базовый класс – личность; поля – фамилия, пол, адрес." << std::endl
		<< "Производный класс – сотрудник университета." << std::endl
		<< "–-------------------------------------------------------------" << std::endl;
}

void InfoCW3()
{
	system("cls");
	std::cout << std::endl
		<< "Контрольная работа № 3. Полиморфизм." << std::endl
		<< "–-------------------------------------------------------------" << std::endl
		<< "Содержание задания:" << std::endl
		<< "Представить матрицу, «окрашенную» наподобие шахматной доски." << std::endl
		<< "Упорядочить элементы на белых клетках по возрастанию по строкам, на черных – по убыванию по столбцам." << std::endl
		<< "–-------------------------------------------------------------" << std::endl;
}

void InfoCW4()
{
	system("cls");
	std::cout << std::endl
		<< "Контрольная работа № 4. Классы потоков ввода-вывода." << std::endl
		<< "–-------------------------------------------------------------" << std::endl
		<< "Содержание задания:" << std::endl
		<< "Найти в тексте все повторяющиеся подстроки длиннее заданной пользователем величины(например, длиннее пяти символов)." << std::endl
		<< "Заменить все вхождения подстроки кроме первого специальной сигнатурой : {индекс первого символа оригинальной строки, длина цепочки}." << std::endl
		<< "Перед заменой убедиться, что в тексте нет комбинаций символов, которые могут ошибочно восприниматься как формируемая сигнатура." << std::endl
		<< "Предусмотреть режим восстановления оригинального текста." << std::endl
		<< "Пример : текст «тестовая строка» должен быть заменен на текст «тестовая{ 3, 2 }рока» при условии," << std::endl
		<< "что рассматриваются подстроки, начиная с длины в два символа." << std::endl
		<< "–-------------------------------------------------------------" << std::endl;
}